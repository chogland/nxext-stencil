@use "sass:math";

$popper-transform-bottom: translateY(-5px);
$popper-transform-top: translateY(5px);
$popper-transform-left: translateX(5px);
$popper-transform-right: translateX(-5px);
$popper-default-z-index: 900;

:root {
  --rds-popper-transition: width 2s linear 1s;
}

@mixin popperAnim {
  .rds-popper-anim {
    @apply relative rounded shadow-sm opacity-0 transition-all animate-in;

    z-index: 1;
    visibility: hidden;
  }
}

@mixin popperAnimActive {
  @apply visible opacity-100;

  transform: translate(0);
}

@mixin popperElemAnim($selector) {
  #{$selector} {
    @include popperAnim();

    &[data-popper-placement^='bottom'] .rds-popper-anim {
      transform: $popper-transform-bottom;
    }

    &[data-popper-placement^='top'] .rds-popper-anim {
      transform: $popper-transform-top;
    }

    &[data-popper-placement^='left'] .rds-popper-anim {
      transform: $popper-transform-left;
    }

    &[data-popper-placement^='right'] .rds-popper-anim {
      transform: $popper-transform-right;
    }

    &[data-popper-placement] .rds-popper-anim--active {
      @include popperAnimActive();
    }
  }
}

@mixin popperHostAnim {
  @include popperAnim();

  :host([data-popper-placement^='bottom']) .rds-popper-anim {
    transform: $popper-transform-bottom;
  }

  :host([data-popper-placement^='top']) .rds-popper-anim {
    transform: $popper-transform-top;
  }

  :host([data-popper-placement^='left']) .rds-popper-anim {
    transform: $popper-transform-left;
  }

  :host([data-popper-placement^='right']) .rds-popper-anim {
    transform: $popper-transform-right;
  }

  :host([data-popper-placement]) .rds-popper-anim--active {
    @include popperAnimActive();
  }
}

@mixin popperContainer($zIndex: $popper-default-z-index) {
  @apply block absolute scale-0;

  z-index: $zIndex;
}

@mixin popperWrapper {
  @apply pointer-events-none;

  visibility: hidden;
}

@mixin popperWrapperActive {
  pointer-events: initial;
  visibility: visible;
}

@mixin popperHost($zIndex: $popper-default-z-index) {
  :host {
    @include popperContainer($zIndex);
  }

  @include popperHostAnim();
}

$pointer_size: 12px;
$pointer_offset: math.div(-$pointer_size, 2);

@mixin popperArrow {
  .arrow,
  .arrow::before {
    @apply -z-1 absolute;
    width: $pointer_size;
    height: $pointer_size;
  }

  .arrow::before {
    content: '';
    @apply shadow-md;
    transform: rotate(45deg);
    background: var(--calcite-ui-foreground-1);
  }

  :host([data-popper-placement^='top']) .arrow {
    bottom: $pointer_offset;
  }

  :host([data-popper-placement^='bottom']) .arrow {
    top: $pointer_offset;
  }

  :host([data-popper-placement^='left']) .arrow {
    right: $pointer_offset;
  }

  :host([data-popper-placement^='right']) .arrow {
    left: $pointer_offset;
  }
}
